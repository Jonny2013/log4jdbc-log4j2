/**
	 * <code>Marker</code> to log <code>Exception</code>s.
	 * These are not specific to one logger in the standard implementation, 
	 * and they are not logged by the loggers "jdbc.resultset" and "jdbc.connection" 
	 * (bug, or a hope for no exception to occur for these events?)
	 */
	private static final Marker EXCEPTION_MARKER = MarkerManager.getMarker("LOG4JDBC_EXCEPTION");


/**
	 * <code>Marker</code> to log events generated by <code>Statement</code>s without execution time
	 * (corresponds to the "jdbc.sqlonly" logger in the standard implementation)
	 */
	private static final Marker SQLONLY_MARKER = MarkerManager.getMarker("LOG4JDBC_SQLONLY", SQL_MARKER);
	/**
	 * <code>Marker</code> to log events generated by <code>Statement</code>s with execution time
	 * (corresponds to the "jdbc.sqltiming" logger in the standard implementation)
	 */
	private static final Marker SQLTIMING_MARKER = MarkerManager.getMarker("LOG4JDBC_SQLTIMING", SQL_MARKER);



<li>The behavior of the loggers "jdbc.sqlonly", "jdbc.sqltiming", 
 * "jdbc.connection", "jdbc.resultset", and "jdbc.audit" 
 * is reproduced through the use of <a href='http://logging.apache.org/log4j/2.0/manual/markers.html'>Markers</a> 
 * within one single logger: 
 * <ul>
 * <li>The <code>Marker</code> <code>SQLONLY_MARKER</code>, named "LOG4JDBC_SQLONLY", 
 * a child of the <code>Marker</code> <code>SQL_MARKER</code>, named "LOG4JDBC_SQL".
 * <li>The <code>Marker</code> <code>SQLTIMING_MARKER</code>, named "LOG4JDBC_SQLTIMING", 
 * a child of the <code>Marker</code> <code>SQL_MARKER</code>, named "LOG4JDBC_SQL".
 * <li>The <code>Marker</code> <code>CONNECTION_MARKER</code>, named "LOG4JDBC_CONNECTION"
 * <li>The <code>Marker</code> <code>RESULTSET_MARKER</code>, named "LOG4JDBC_RESULTSET", 
 * a child of the <code>Marker</code> <code>JDBC_MARKER</code>, named "LOG4JDBC_JDBC"
 * <li>The <code>Marker</code> <code>AUDIT_MARKER</code>, named "LOG4JDBC_AUDIT", 
 * a child of the <code>Marker</code> <code>JDBC_MARKER</code>, named "LOG4JDBC_JDBC"
 * </ul> 